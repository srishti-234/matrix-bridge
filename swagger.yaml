openapi: 3.0.0
info:
  description: |
    Dendrite matrix microservice
  version: "1.0.0"
  title: Dendrite matrix microservice
servers:
  # Added by API Auto Mocking Plugin
  - url: https://matrix.mediamagic.ai
  - url: http://127.0.0.1:8080
tags:
  - name: User
    description: Dendrite matrix microservice user
  - name: Dendrite
    description: Actions on the dendrite server
  - name: Matterbridge
    description: Actions on the matterbridge server
paths:
  /api/v1/matrix/user:
    post:
      tags:
        - User
      summary: register new user
      responses:
        '200':
          description: successful user register
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespReg'
        '400':
          description: bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      requestBody:
        $ref: '#/components/requestBodies/Register'
    get:
      tags:
        - User
      summary: list all user matterbridge and dendrite servers statuses
      responses:
        '200':
          description: list all user matterbridge and dendrite servers statuses
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat' 
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 

      security:
       - ApiKeyAuth: []
    put:
      tags:
        - User
      summary: update user information
      responses:
        '200':
          description: successful update
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespUpdate' #TODO change
        '400':
          description: bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError'        
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      requestBody:
        $ref: '#/components/requestBodies/Update'       
      security:
       - ApiKeyAuth: []
    delete:
      tags:
        - User
      summary: delete user
      responses:
        '200':
          description: successful delete
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '400':
          description: bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      requestBody:
        $ref: '#/components/requestBodies/Delete'  
      security:
       - ApiKeyAuth: []

  /api/v1/matrix/user/login:
    post:
      tags:
        - User
      summary: user login
      responses:
        '200':
          description: successful Login
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespUpdate' 
        '400':
          description: bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      requestBody:
        $ref: '#/components/requestBodies/Login'
  /api/v1/matrix/user/logout:
    post:
      tags:
        - User
      summary: user logout
      responses:
        '200':
          description: successful logout
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      security:
       - ApiKeyAuth: []
    
  /api/v1/matrix/dendrite:
     post:
      tags:
        - Dendrite
      summary: create new dendrite server
      description: create new dendrite server
      responses:
        '200':
          description: successful server creation
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat' 
        '400':
          description: bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      requestBody:
        $ref: '#/components/requestBodies/DendriteCreate'
      security:
        - ApiKeyAuth: []
  /api/v1/matrix/dendrite/{hostname}:
    get:
      tags:
        - Dendrite
      summary: show the dendrite server  information 
      description: show the dendrite server  information
      parameters:
        - in: path
          name: hostname
          schema:
            type: string
            example: company.matrix.mediamagic.ai
          required: true
          description: dendrite hostname 
      responses:
        '200':
          description:  dendrite server information 
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 

      security:
        - ApiKeyAuth: []
    put:
      tags:
        - Dendrite
      summary: update   dendrite server
      description: update   dendrite server
      parameters:
        - in: path
          name: hostname
          schema:
            type: string
            example: company.matrix.mediamagic.ai

          required: true
          description: dendrite hostname 
      responses:
        '200':
          description: successful dendrite server update
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
      requestBody:
        $ref: '#/components/requestBodies/DendriteCreate'
        '400':
          description: bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 

      security:
        - ApiKeyAuth: []
    delete:
      tags:
        - Dendrite
      summary: delete  dendrite server
      description: delete  dendrite server
      parameters:
        - in: path
          name: hostname
          schema:
            type: string
            example: company.matrix.mediamagic.ai
          required: true
          description: dendrite hostname
      responses:
        '200':
          description: successful dendrite server delete
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 

      security:
        - ApiKeyAuth: []

  /api/v1/matrix/dendrite/{hostname}/start:
     post:
      tags:
        - Dendrite
      summary: start  dendrite server
      description: start  dendrite server
      parameters:
        - in: path
          name: hostname
          schema:
            type: string
            example: company.matrix.mediamagic.ai
          required: true
          description: dendrite hostname 
      responses:
        '200':
          description: successful server start
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
   
      security:
        - ApiKeyAuth: []

  /api/v1/matrix/dendrite/{hostname}/stop:
     post:
      tags:
        - Dendrite
      summary: stop  dendrite server
      description: stop  dendrite server
      parameters:
        - in: path
          name: hostname
          schema:
            type: string
            example: company.matrix.mediamagic.ai
          required: true
          description: dendrite hostname 
      responses:
        '200':
          description: successful server stop
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 

      security:
        - ApiKeyAuth: []
  /api/v1/matrix/dendrite/{hostname}/status:
     get:
      tags:
        - Dendrite
      summary: dendrite server status
      description: dendrite server status
      parameters:
        - in: path
          name: hostname
          schema:
            type: string
            example: company.matrix.mediamagic.ai

          required: true
          description: dendrite hostname 
      responses:
        '200':
          description:  successful server status information
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 

      security:
        - ApiKeyAuth: []
  /api/v1/matrix/dendrite/{hostname}/restart:
    post:
      tags:
        - Dendrite
      summary: restart dendrite server  
      description: restart dendrite server 
      deprecated: true
      parameters:
        - in: path
          name: hostname
          schema:
            type: string
            example: company.matrix.mediamagic.ai
          required: true
          description: dendrite hostname
      responses:
        '200':
          description: successful server restart
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 

      security:
        - ApiKeyAuth: []
  /configs/org/dendrite.yaml:
    get:
      tags:
        - config
      summary: dendrite configuration file 
      deprecated: true

      responses:
        '200':
          description: dendrite configuration file
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      security:
       - ApiKeyAuth: []
  /api/v1/matrix/dendrite/{hostname}/log:
     get:
      tags:
        - Dendrite
      summary: server log
      description: server log
      parameters:
        - in: path
          name: hostname
          schema:
            type: string
            example: company.matrix.mediamagic.ai

          required: true
          description: dendrite hostname 
      responses:
        '200':
          description:  successful server log
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      security:
        - ApiKeyAuth: []
  /api/v1/matrix/matterbridge:
     post:
      tags:
        - Matterbridge
      summary: create matterbridge server  
      description: create matterbridge server 
      responses:
        '200':
          description: successful server creation
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat' #TODO
        '400':
          description: bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      requestBody:
               $ref: '#/components/requestBodies/MatterbridgeCreate'
      security:
        - ApiKeyAuth: []
  /api/v1/matrix/matterbridge/{network}:
    get:
      tags:
        - Matterbridge
      summary: show   matterbridge server information
      description: show   matterbridge server information
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slack-demo-workspace
          required: true
          description:  matterbridge network name
      responses:
        '200':
          description: successful matterbridge show information
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 

      security:
        - ApiKeyAuth: []
    put:
      tags:
        - Matterbridge
      summary: update   matterbridge server
      description: update   matterbridge server
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slack-demo-workspace

          required: true
          description: matterbridge network name
      responses:
        '200':
          description: successful matterbridge server update
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '400':
          description: bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      requestBody:
        $ref: '#/components/requestBodies/MatterbridgeCreate'

      security:
        - ApiKeyAuth: []
    delete:
      tags:
        - Matterbridge
      summary: delete   matterbridge server
      description: delete   matterbridge server
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slack-demo-workspace

          required: true
          description: matterbridge network name
      responses:
        '200':
          description: successful matterbridge server delete
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      security:
        - ApiKeyAuth: []

  /api/v1/matrix/matterbridge/{network}/start:
     post:
      tags:
        - Matterbridge
      summary: start   matterbridge server
      description: start   matterbridge server
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slack-demo-workspace
          required: true
          description: matterbridge network name
      responses:
        '200':
          description: successful server start
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
   
      security:
        - ApiKeyAuth: []

  /api/v1/matrix/matterbridge/{network}/stop:
     post:
      tags:
        - Matterbridge
      summary: stop  matterbridge server
      description: stop  matterbridge server
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slack-demo-workspace

          required: true
          description: matterbridge network name
      responses:
        '200':
          description: successful matterbridge server stop
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 

      security:
        - ApiKeyAuth: []
  /api/v1/matrix/matterbridge/{network}/status:
     get:
      tags:
        - Matterbridge
      summary: matterbridge server status
      description: matterbridge server status
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slack-demo-workspace

          required: true
          description: matterbridge network name
      responses:
        '200':
          description:  successful matterbridge server status information
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 

      security:
        - ApiKeyAuth: []
  /api/v1/matrix/matterbridge/{network}/list:
     get:
      tags:
        - Matterbridge
      summary:  list network channels
      description: matterbridge network  channels
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slack-demo-workspace

          required: true
          description: matterbridge network name
      responses:
        '200':
          description:  successful matterbridge channels list
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 

      security:
        - ApiKeyAuth: []
  /api/v1/matrix/matterbridge/{network}/log:
     get:
      tags:
        - Matterbridge
      summary: matterbridge server log
      description: matterbridge server log
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slack-demo-workspace

          required: true
          description:  matterbridge network name
      responses:
        '200':
          description:  log return
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      security:
        - ApiKeyAuth: []
  /api/v1/matrix/matterbridge/{network}/restart:
    post:
      tags:
        - Matterbridge
      summary: restart  matterbridge server
      description: restart  matterbridge server
      deprecated: true
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slack-demo-workspace
          required: true
          description:  matterbridge network name
      responses:
        '200':
          description: successful matterbridge server restart
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat'
        '400':
          description: bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 

      security:
        - ApiKeyAuth: []
  /api/v1/matrix/matterbridge/{network}/chat-log:
     get:
      tags:
        - Matterbridge
      summary: matrix rooms chat logs history
      description: matrix rooms chat logs history
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slacks-company
          required: true
          description: matterbridge network name
        - in: query
          name: from
          schema:
            type: string
            example: "2022-04-26"

          description:  filter the messages returned  from this  date to  the most recent date 
          required: true

      responses:
        '200':
          description:  successful rooms chat logs history
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ChatLogResp' 
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      security:
        - ApiKeyAuth: []
  /api/v1/matrix/matterbridge/{network}/append/{channel}:
     get:
      tags:
        - Matterbridge
      summary: add channel to mattebridge network 
      description: add channel to mattebridge network 
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slacks-company
            description: matterbridge network name
          required: true
        - in: path

          name: channel
          schema:
            type: string
            example: general
          description: matterbridge channels name
          required: true
      responses:
        '200':
          description:  successful channels append
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat' 
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      security:
        - ApiKeyAuth: []
  /api/v1/matrix/matterbridge/{network}/remove/{channel}:
     get:
      tags:
        - Matterbridge
      summary: remove channel to mattebridge network 
      description: remove channel to mattebridge network 
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slacks-company
            description: matterbridge network name
          required: true
        - in: path

          name: channel
          schema:
            type: string
            example: general
          description: matterbridge channels name
          required: true
      responses:
        '200':
          description:  successful channels remove
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespStat' 
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      security:
        - ApiKeyAuth: []
  /configs/org/{network}/matterbridge.toml:
    get:
      tags:
        - config
      summary: matterbridge configuration file 
      deprecated: true
      parameters:
        - in: path
          name: network
          schema:
            type: string
            example: slacks-company
            description: matterbridge network name
          required: true
      responses:
        '200':
          description: matterbridge configuration file 
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: empty or invalid api key
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
        '500':
          description: internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/RespError' 
      security:
       - ApiKeyAuth: []
components:
  schemas:
    RespStat:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          example: successful
    RespReg:
      type: object
      properties:
        configpass: 
          example: aWJyYWhpbWs5MDAwLjAyNjM1OWZkNzc1NmZlY2M3MWJjNTVkZjFiNjJhMzNmZjMyNDMzNTFiZDBhNDNiZDQ5MTc5NzM2Zjc5Mjc4YWQ
          type: string
        port: 
           type: string
           example: 19999
        Hostname: 
           type: string
           example: matrix.mediamagic.ai
        live-url: 
           type: string
           example: matrix.mediamagic.ai:19999
    RespUpdate:
      type: object
      required:
        - configpass
      properties:
        configpass: 
          type: string
          example: aWJyYWhpbWs5MDAwLjAyNjM1OWZkNzc1NmZlY2M3MWJjNTVkZjFiNjJhMzNmZjMyNDMzNTFiZDBhNDNiZDQ5MTc5NzM2Zjc5Mjc4YWQ

    RespList: #TODO
      type: object
      required:
        - configpass
      properties:
        configpass: 
          type: string
    RespError: 
      type: object
      properties:
        status: 
          type: string
          example: ""
        message: 
           type: string
           example: ""
        error: 
           type: string
           example: ""
    ChatLogResp: 
      type: object
      properties:
       message:
        type: string
        example:  "message sample text"
       sender: 
        type: string
        example:  "nickname"
       account: 
        type: string
        example:  "@bot-libera:demo.matrix.mediamagic.ai"
       channel:
        type: string
        example:  "#ubuntu-libera:demo.matrix.mediamagic.ai"
       timestamp: 
        type: string
        example: "Sun, 24 Apr 2022 15:12:00 CET"
       unix_timestamp: 
        type: integer
        example: 1650809520763
    ReqReg:
     type: object
     required:
        - username
        - password
        - port
        - hostname
     properties:
       hostname: 
        type: string
        example: company.matrix.mediamagic.ai
       port: 
        type: string
        example: auto
       username: 
        type: string
        example: usertest
       password: 
         type: string
         example: mypass
    ReqUpdate:
     type: object
     required:
        - old-password
        - username
        - password
     properties:
       old-password: 
         type: string
         example: oldpass
       username: 
         type: string
         example: usertest
       password: 
         type: string
         example: mypass
    ReqDelete:
     type: object
     required:
        - password
     properties:
       password: 
         type: string
         example: mypass
    ReqLogin:
     type: object
     required:
        - username
        - password
     properties:
       username: 
        type: string
        minLength: 3
        maxLength: 32
        example: usertest
       password: 
         type: string
         minLength: 8
         maxLength: 32
         example: password
    DendriteCreateReq:
      required:
        - hostname
        - port
      properties:
       hostname: 
        type: string
        example: mycompany.matrix.mediamagic.ai
       port: 
         type: string
         example: "19999"
    MatterbridgeCreateReq:
         anyOf:
          - $ref: '#/components/schemas/slack'
          - $ref: '#/components/schemas/discord'
          - $ref: '#/components/schemas/matrix'
          - $ref: '#/components/schemas/irc'

    slack:
      required:
        - conf
      properties:
       name: 
        type: string
        example: "slack-company"
        minLength: 3
        maxLength: 32
       conf:
          type: object
          properties:
            platform:
              type: string
            token:
              type: string
            channel:
              type: string
          example:   
              platform: slack
              token: xoxb
              channel: "golang-mm-and-matrix-work"
          required:
            - platform
            - token
            - channel  

    discord:
      required:
        - conf
      properties:
       name: 
        type: string
        minLength: 3
        maxLength: 32
        example: "discord-company"
       conf:
          type: object
          properties:
            platform:
              type: string
            token:
              type: string
            server:
              type: string
            channel:
              type: string
          example:   # Object-level example
              platform: discord
              token: "discord-bot-token"
              server: "server-name"
              channel: "general"
          required:
            - platform
            - server
            - token
            - channel  
    matrix:
      required:
        - conf
      properties:
       name: 
        type: string
        minLength: 3
        maxLength: 32
        example: "matrix-company"
       conf:
          type: object
          properties:
            platform:
              type: string
            server:
              type: string
            login:
              type: string
            password:
              type: string
            channel:
              type: string
          example:   # Object-level example
              platform: matrix
              server: "http://localhost"
              login: test1
              password: pass
              channel: "#slack-company:localhost"
          required:
            - platform
            - server
            - login
            - password
            - channel  
    irc:
      required:
        - conf
      properties:
       name: 
        type: string
        example: "irc-company"
        minLength: 3
        maxLength: 32
       conf:
          type: object
          properties:
            platform:
              type: string
            nick:
              type: string
            server:
              type: string
            port:
             type: string
            channel:
              type: string
          example:   # Object-level example
              platform: irc
              nick: irctest-nick
              server: "irc.libera.chat:6667 | libera.chat"
              port: "6667"
              channel: "#testing"
          required:
            - platform
            - nick
            - server
            - channel
    whatsapp:
      required:
        - conf
      properties:
       name: 
        type: string
        example: "whatsapp-company"
        minLength: 3
        maxLength: 32
       conf:
          type: object
          properties:
            platform:
              type: string
            number:
              type: string
          example:   # Object-level example
              platform: whatsapp
              Number: "+000"
          required:
            - platform
            - number
    telegram:
      required:
        - conf
      properties:
       name: 
        type: string
        example: "telegram-company"
        minLength: 3
        maxLength: 32
       conf:
          type: object
          properties:
            platform:
              type: string
            token:
              type: string
          example:   # Object-level example
              platform: telegram
              token: "telegram-bot-token"
          required:
            - platform
            - token
  requestBodies:
    Register:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReqLogin'
      description: user register
      required: true
    Login:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReqLogin'
      description: user login
      required: true
    Update:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReqUpdate'
    Delete:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReqDelete'     
      description: user update`
      required: true
    DendriteCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DendriteCreateReq'
      description: dendrite create
      required: true
    DendriteUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DendriteCreateReq'
      description: dendrite update
      required: true
    MatterbridgeCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MatterbridgeCreateReq'
      description: matterbridge create
      required: true
    MatterbridgeUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MatterbridgeCreateReq'
      description: matterbridge update
      required: true
  securitySchemes:
    ApiKeyAuth:        
      type: apiKey
      in: header       
      name: X-API-Key
